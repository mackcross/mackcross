---
output: html_document
---

```{r setup, include=FALSE, echo=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
```

# VISUALIZING IOWA EDUCATION

This collection of maps explores some variables which can be associated with academic success  

```{r, echo=FALSE}
rm(list=ls())
library(readr)
library(choroplethr)
library(choroplethrMaps)
library(dplyr)
library(ggplot2) 
library(plotly)
library(tmap)
library(sf)
library(tmaptools)
library(gganimate)
library(cowplot)
```





```{r, echo=FALSE}
# Importing in geojoson file 
my_map <- st_read("~/Documents/research/primate_map/project_materials/sci_comm/shapefiles/rural_variables.geojson")
my_data <- data.frame(my_map)

# Convert size variable to numeric and remove missing values
my_map$cleaned_rural_density <- as.numeric(my_map$cleaned_rural_density)
my_map$cleaned_rural_mean_sci <- as.numeric(my_map$cleaned_rural_mean_sci)
my_map$cleaned_rural_mean_math <- as.numeric(my_map$cleaned_rural_mean_math)
my_map$cleaned_rural_CountyGraduateRate4yr <- as.numeric(my_map$cleaned_rural_CountyGraduateRate4yr)
my_map$cleaned_rural_CountySpendingPerStudent <- as.numeric(my_map$cleaned_rural_CountySpendingPerStudent)
my_map$cleaned_rural_Graduate.or.professional.degree.. <- as.numeric(my_map$cleaned_rural_Graduate.or.professional.degree..)
my_map$cleaned_rural_Bachelor.s.degree.. <- as.numeric(my_map$cleaned_rural_Bachelor.s.degree..)

# Palettes of interest 
# palette = c("#a6bddb", "#3690c0", "#034e7b"), 
# palette = c("#8c510a", "#d8b365", "#7fbf7b"),


```





```{r, echo=FALSE}
# Determine quantiles 
# quantile(my_map$cleaned_rural_mean_sci, na.rm = TRUE)

# Set quantiles 
my_map$binned_science <- as.numeric(my_map$cleaned_rural_mean_sci)
my_map$binned_science <- cut(my_map$cleaned_rural_mean_sci,
                             breaks = c(19.01000, 20.13391, 20.64000, 21.16250, 22.63571),
                             labels = c(1, 2, 3, 4))
my_map$binned_science <- as.numeric(my_map$binned_science)


sci_map <- tm_shape(my_map) +
  tm_fill("cleaned_rural_CountySpendingPerStudent", style = "quantile", n = 5, palette = "Greys", title = "Avg. Spending per Student") +
  tm_bubbles(size = "binned_science",
             col = "#034e7b", 
             alpha = .8, 
             title.size ="Avg. ACT Science Score", 
             legend.size.is.portrait=TRUE,
             sizes.legend.labels=c("<= 20.1","<= 20.6","<= 21.2","<= 22.6"), 
             scale = 1.75) +
  #tm_layout(frame = FALSE, bg.color = "black") +
  tm_legend(outside = TRUE, 
            outside.position = "left", 
            bg.color = "transparent", 
            frame = FALSE)

###############################################################################

# Determine quantiles 
# quantile(my_map$cleaned_rural_mean_math, na.rm = TRUE)

# Set quantiles 
my_map$binned_math <- as.numeric(my_map$cleaned_rural_mean_math)
my_map$binned_math <- cut(my_map$cleaned_rural_mean_math,
                             breaks = c(19.66250, 21.33818, 21.68000, 22.08706, 23.12000),
                             labels = c(1, 2, 3, 4))
my_map$binned_math <- as.numeric(my_map$binned_math)


math_map <- tm_shape(my_map) +
  tm_fill("cleaned_rural_CountySpendingPerStudent", style = "quantile", n = 5, palette = "Greys", title = "Avg. Spending per Student") +
  tm_bubbles(size = "binned_math",
             col = "#034e7b",
             alpha = .8, 
             title.size ="Avg. ACT Math Score", 
             legend.size.is.portrait=TRUE,
             sizes.legend.labels=c("<= 21.3","<= 21.7","<= 22.1","<= 23.1"), 
             scale = 1.75) +
  #tm_layout(frame = FALSE, bg.color = "black") +
  tm_legend(outside = TRUE, 
            outside.position = "left", 
            bg.color = "transparent", 
            frame = FALSE)

# Combine the maps into a list
maps <- list(sci_map, math_map)

# Use gganimate to animate between the maps
animated_map <- gganimate::transition_manual(
  states = maps,
  transition_length = 1,
  keep_last_state = TRUE
)

# Save the animation as a GIF
gganimate::anim_save("animated_map.gif", animated_map)
animate(animated_map, fps = 10, width = 800, height = 600, renderer = gifski_renderer("animated_map.gif"))
```





```{r, echo=FALSE}
# Determine quantiles 
# quantile(my_map$cleaned_rural_mean_math, na.rm = TRUE)

# Set quantiles 
my_map$binned_math <- as.numeric(my_map$cleaned_rural_mean_math)
my_map$binned_math <- cut(my_map$cleaned_rural_mean_math,
                             breaks = c(19.66250, 21.33818, 21.68000, 22.08706, 23.12000),
                             labels = c(1, 2, 3, 4))
my_map$binned_math <- as.numeric(my_map$binned_math)


tm_shape(my_map) +
  tm_fill("cleaned_rural_CountySpendingPerStudent", style = "quantile", n = 5, palette = "Greys", title = "Avg. Spending per Student") +
  tm_bubbles(size = "binned_math",
             col = "#034e7b",
             alpha = .8, 
             title.size ="Avg. ACT Math Score", 
             legend.size.is.portrait=TRUE,
             sizes.legend.labels=c("<= 21.3","<= 21.7","<= 22.1","<= 23.1"), 
             scale = 1.75) +
  #tm_layout(frame = FALSE, bg.color = "black") +
  tm_legend(outside = TRUE, 
            outside.position = "left", 
            bg.color = "transparent", 
            frame = FALSE)

```





```{r, echo=FALSE}
# Determine quantiles 
# quantile(my_map$cleaned_rural_CountyGraduateRate4yr, na.rm = TRUE)

# Set quantiles 
my_map$binned_grad <- as.numeric(my_map$cleaned_rural_CountyGraduateRate4yr)
my_map$binned_grad <- cut(my_map$cleaned_rural_CountyGraduateRate4yr,
                             breaks = c(81.9000, 91.1050, 94.0700, 96.0425, 100.0000),
                             labels = c(1, 2, 3, 4))
my_map$binned_grad <- as.numeric(my_map$binned_grad)


tm_shape(my_map) +
  tm_fill("cleaned_rural_CountySpendingPerStudent", style = "quantile", n = 5, palette = "Greys", title = "Avg. Spending per Student") +
  tm_bubbles(size = "binned_grad",
             col = "#3690c0",
             palette = c("#a6bddb", "#3690c0", "#034e7b"), 
             n = 3, 
             alpha = .8, 
             title.size ="4yr Graduation Rate", 
             legend.size.is.portrait=TRUE,
             sizes.legend.labels=c("<= 91%","<= 94%","<= 96%","<= 100%"), 
             scale = 1.75) +
  #tm_layout(frame = FALSE, bg.color = "black") +
  tm_legend(outside = TRUE, 
            outside.position = "left", 
            bg.color = "transparent", 
            frame = FALSE)

```




```{r, echo=FALSE}
# Determine quantiles 
# quantile(my_map$cleaned_rural_Graduate.or.professional.degree.., na.rm = TRUE)

# Set quantiles 
my_map$binned_phd <- as.numeric(my_map$cleaned_rural_Graduate.or.professional.degree..)
my_map$binned_phd <- cut(my_map$cleaned_rural_Graduate.or.professional.degree..,
                             breaks = c(2.7, 4.0, 4.8, 5.9, 23.7),
                             labels = c(1, 2, 3, 4))
my_map$binned_phd <- as.numeric(my_map$binned_phd)


tm_shape(my_map) +
  tm_fill("cleaned_rural_CountySpendingPerStudent", style = "quantile", n = 5, palette = "Greys", title = "Avg. Spending per Student") +
  tm_bubbles(size = "binned_phd",
             col = "#034e7b",
             palette = c("#a6bddb", "#3690c0", "#034e7b"), 
             n = 3, 
             alpha = .8, 
             title.size ="% Graduate Degree Holders", 
             legend.size.is.portrait=TRUE,
             sizes.legend.labels=c("<= 4%","<= 4.8%","<= 5.9%","<= 23.7%"), 
             scale = 1.75) +
  #tm_layout(frame = FALSE, bg.color = "black") +
  tm_legend(outside = TRUE, 
            outside.position = "left", 
            bg.color = "transparent", 
            frame = FALSE)

```







```{r, echo=FALSE}
# Determine quantiles 
# quantile(my_map$cleaned_rural_Bachelor.s.degree.., na.rm = TRUE)

# Set quantiles 
my_map$binned_ba <- as.numeric(my_map$cleaned_rural_Bachelor.s.degree..)
my_map$binned_ba <- cut(my_map$cleaned_rural_Bachelor.s.degree..,
                             breaks = c(7.40, 11.75, 13.50, 14.90, 32.10),
                             labels = c(1, 2, 3, 4))
my_map$binned_ba <- as.numeric(my_map$binned_ba)


tm_shape(my_map) +
  tm_fill("cleaned_rural_CountySpendingPerStudent", style = "quantile", n = 5, palette = "Greys", title = "Avg. Spending per Student") +
  tm_bubbles(size = "binned_ba",
             col = "#034e7b",
             # palette = c("#a6bddb", "#3690c0", "#034e7b"), 
             n = 3, 
             alpha = .8, 
             title.size ="% Graduate Degree Holders", 
             legend.size.is.portrait=TRUE,
             sizes.legend.labels=c("<= 4%","<= 4.8%","<= 5.9%","<= 23.7%"), 
             scale = 1.75) +
  #tm_layout(frame = FALSE, bg.color = "black") +
  tm_legend(outside = TRUE, 
            outside.position = "left", 
            bg.color = "transparent", 
            frame = FALSE)


```







